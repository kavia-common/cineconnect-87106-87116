{"is_source_file": true, "format": "JavaScript (React/JSX)", "description": "This file defines a React Context and hooks for theme management (light/dark mode) with persistence via localStorage and system preference detection. It includes the ThemeProvider component, a custom hook useTheme, and internal utility functions for localStorage access and media query checks.", "external_files": ["react", "react/createContext", "react/useContext", "react/useEffect", "react/useMemo", "react/useState"], "external_methods": ["React.createContext", "React.useContext", "React.useEffect", "React.useMemo", "React.useState", "window.matchMedia", "localStorage.getItem", "localStorage.setItem"], "published": ["ThemeProvider", "useTheme"], "classes": [], "methods": [{"name": "ThemeProvider({ children })", "description": "React component providing theme context with support for system preference, localStorage persistence, and toggling between light and dark modes.", "scope": "", "scopeKind": ""}, {"name": "useTheme()", "description": "Custom hook returning theme context including current theme, theme state, and toggle function.", "scope": "", "scopeKind": ""}, {"name": "prefersDark()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "safeGet(key)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "safeSet(key, val)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["React.useState", "React.useEffect", "React.useMemo", "safeGet", "safeSet", "window.matchMedia", "root.setAttribute", "root.style.colorScheme", "mql.addEventListener", "mql.removeEventListener"], "search-terms": ["ThemeProvider", "useTheme", "color-scheme management", "localStorage persistence", "prefers-color-scheme", "React context for theme", "dynamic theme toggling"], "state": 2, "file_id": 57, "knowledge_revision": 172, "git_revision": "", "ctags": [{"_type": "tag", "name": "ThemeCtx", "path": "/home/kavia/workspace/code-generation/cineconnect-87106-87116/cinemadrops_frontend/src/services/Theme.js", "pattern": "/^const ThemeCtx = createContext(null);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "ThemeProvider", "path": "/home/kavia/workspace/code-generation/cineconnect-87106-87116/cinemadrops_frontend/src/services/Theme.js", "pattern": "/^export function ThemeProvider({ children }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ children })"}, {"_type": "tag", "name": "prefersDark", "path": "/home/kavia/workspace/code-generation/cineconnect-87106-87116/cinemadrops_frontend/src/services/Theme.js", "pattern": "/^function prefersDark() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "safeGet", "path": "/home/kavia/workspace/code-generation/cineconnect-87106-87116/cinemadrops_frontend/src/services/Theme.js", "pattern": "/^function safeGet(key) {$/", "language": "JavaScript", "kind": "function", "signature": "(key)"}, {"_type": "tag", "name": "safeSet", "path": "/home/kavia/workspace/code-generation/cineconnect-87106-87116/cinemadrops_frontend/src/services/Theme.js", "pattern": "/^function safeSet(key, val) {$/", "language": "JavaScript", "kind": "function", "signature": "(key, val)"}, {"_type": "tag", "name": "useTheme", "path": "/home/kavia/workspace/code-generation/cineconnect-87106-87116/cinemadrops_frontend/src/services/Theme.js", "pattern": "/^export function useTheme() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/cineconnect-87106-87116/cinemadrops_frontend/src/services/Theme.js", "pattern": "/^  return <ThemeCtx.Provider value={value}>{children}<\\/ThemeCtx.Provider>;$/", "language": "JavaScript", "kind": "field", "scope": "Provider", "scopeKind": "class"}], "hash": "948e68eac5dd40035c4669a7e35ae7f4", "format-version": 4, "code-base-name": "cinemadrops_frontend", "filename": "cinemadrops_frontend/src/services/Theme.js", "fields": [{"name": "return <ThemeCtx.Provider value={value}>{children}<\\/ThemeCtx.Provider>;", "scope": "Provider", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"172": ""}]}