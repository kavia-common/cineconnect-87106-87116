{"is_source_file": true, "format": "Markdown (contiene c\u00f3digo Python)", "description": "Este archivo contiene la implementaci\u00f3n de una funci\u00f3n Lambda para subir archivos a S3 desde una URL, incluyendo validaciones, manejo de tama\u00f1os y generaci\u00f3n de URLs prefirmadas. Est\u00e1 escrito en Python y parece formar parte de un backend que facilita cargas de archivos mediante streaming.", "external_files": ["boto3", "botocore", "requests"], "external_methods": ["boto3.client", "botocore.exceptions.ClientError", "requests.Session", "requests.head", "requests.get", "requests.close", "s3.put_object", "s3.create_multipart_upload", "s3.upload_part", "s3.complete_multipart_upload", "s3.abort_multipart_upload", "s3.generate_presigned_url"], "published": ["handle_url_upload", "lambda_handler"], "classes": [], "methods": [{"name": "_coerce_int", "description": "Convierte un valor a entero, aceptando string num\u00e9rico, float o entero.", "parameters": ["value", "default", "field_name"]}, {"name": "_env_int", "description": "Lee una variable de entorno y la convierte a entero con un valor por defecto."}, {"name": "_safe_content_length", "description": "Extrae y convierte Content-Length de las cabeceras HTTP, si est\u00e1 disponible."}, {"name": "_requests_session", "description": "Context manager para gestionar la vida de una sesi\u00f3n requests."}, {"name": "_s3_client", "description": "Crea un cliente S3 respetando la configuraci\u00f3n regional si est\u00e1 definida."}, {"name": "_build_s3_key", "description": "Genera una clave \u00fanica para S3 usando UUID y conservando extensi\u00f3n del filename."}, {"name": "_parse_body", "description": "Normaliza el cuerpo del evento AWS Lambda en un diccionario."}, {"name": "_extract_params", "description": "Extrae y procesa los par\u00e1metros relevantes del evento y las variables de entorno, aplicando coerci\u00f3n a enteros y validaciones."}, {"name": "_upload_stream_simple", "description": "Sube contenido en streaming a S3 en una sola operaci\u00f3n, \u00fatil para archivos peque\u00f1os."}, {"name": "_upload_stream_multipart", "description": "Sube en modo multipart a S3 para archivos grandes, dividiendo en partes y gestionando la carga."}, {"name": "handle_url_upload", "description": "Funci\u00f3n principal expuesta para recibir una URL, validar, descargar y subir a S3, generando una URL prefirmada si corresponde."}, {"name": "_json", "description": "Genera una respuesta HTTP con c\u00f3digo y cuerpo JSON."}, {"name": "lambda_handler", "description": "Funci\u00f3n de entrada del Lambda que delega en handle_url_upload y gestiona excepciones globales."}], "calls": ["sess.head", "sess.get", "s3.generate_presigned_url", "s3.put_object", "s3.create_multipart_upload", "s3.upload_part", "s3.complete_multipart_upload", "s3.abort_multipart_upload"], "search-terms": ["handle_url_upload", "multipart upload", "streaming download", "presigned URL", "S3 upload", "lambda", "URL size validation", "Content-Length", "variable coercion", "max file size"], "state": 2, "file_id": 49, "knowledge_revision": 107, "git_revision": "4032d672eb3b1270fde00c95984754b444ab5ddf", "revision_history": [{"106": "c59f54b11da42cdfe1d890056c90c59c080eec72"}, {"107": "4032d672eb3b1270fde00c95984754b444ab5ddf"}], "hash": "86e49f20605a64263cd86b49aed46cc6", "format-version": 4, "code-base-name": "cinemadrops_frontend", "filename": "BACKEND_FIX_HANDLE_URL_UPLOAD.md"}